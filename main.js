(()=>{var e={104:e=>{var t="undefined"!=typeof process&&process.pid?process.pid.toString(36):"";function r(){var e=Date.now(),t=r.last||e;return r.last=e>t?e:t+1}e.exports=e.exports.default=function(e,s){return(e||"")+""+t+r().toString(36)+(s||"")},e.exports.process=function(e,s){return(e||"")+t+r().toString(36)+(s||"")},e.exports.time=function(e,t){return(e||"")+r().toString(36)+(t||"")}}},t={};function r(s){var d=t[s];if(void 0!==d)return d.exports;var i=t[s]={exports:{}};return e[s](i,i.exports,r),i.exports}r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},r.d=(e,t)=>{for(var s in t)r.o(t,s)&&!r.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{"use strict";var e=r(104),t=r.n(e);(new class{constructor(){this.url="https://dmitryvinogradov-tickets.herokuapp.com"}init(){this.renderField(),this.openForms(),this.redrawAllTickets()}renderField(){this.field=document.createElement("div"),this.field.classList.add("field");const e=document.createElement("div");e.classList.add("header");const t=document.createElement("button");t.classList.add("add-button"),t.classList.add("btn"),t.innerText="Добавить тикет",e.appendChild(t);const r=document.createElement("ul");r.classList.add("ticket-list"),this.field.appendChild(e),this.field.appendChild(r),document.querySelector("body").appendChild(this.field),this.addForm=document.createElement("form"),this.addForm.classList.add("add-form"),this.addForm.classList.add("modal"),this.addForm.innerHTML="<div class = 'form-header-wrapper'> <h3 class = 'form-header'> Добавить тикет </h3></div>",this.addForm.innerHTML+="<div class = 'input-wrapper'> <h4 class = 'input-header'> Краткое описание </h4> <input class = 'form-input' id = 'short-desc'>  </div>",this.addForm.innerHTML+="<div class = 'input-wrapper'> <h4 class = 'input-header'> Полное описание </h4> <textarea id = 'full-desc'> </textarea></div>",this.addForm.innerHTML+="<div class = 'btn-group'> <button class = 'btn cancel-button'> Отмена </button> <button class = 'btn ok-button'> OK </button></div>",this.addForm.querySelector(".cancel-button").addEventListener("click",(e=>{e.preventDefault(),e.target.closest(".modal").remove()})),this.addForm.querySelector(".ok-button").addEventListener("click",(e=>{e.preventDefault(),this.addNewTicket(),e.target.closest(".modal").remove()}))}showAddForm(){document.querySelector(".field").appendChild(this.addForm)}showRemoveForm(e){this.removeForm=document.createElement("div"),this.removeForm.classList.add("remove-form"),this.removeForm.classList.add("modal"),this.removeForm.innerHTML="<div class = 'form-header-wrapper'> <h3 class = 'form-header'> Удалить тикет </h3></div>",this.removeForm.innerHTML+="<div class = 'remove-form-wrapper'> Вы действительно хотите удалить тикет? Это действие необратимо. </div>",this.removeForm.innerHTML+="<div class = 'btn-group'> <button class = 'btn cancel-button'> Отмена </button> <button class = 'btn ok-button'> OK </button></div>",document.querySelector(".field").appendChild(this.removeForm),this.removeForm.querySelector(".ok-button").addEventListener("click",(t=>{t.preventDefault();const r=new XMLHttpRequest;r.open("POST",`${this.url}?removeTicket`,!0),r.send(e.id),e.remove(),this.removeForm.remove()})),this.removeForm.querySelector(".cancel-button").addEventListener("click",(e=>{e.preventDefault(),this.removeForm.remove()}))}showEditForm(e){this.editForm=document.createElement("form"),this.editForm.classList.add("edit-form"),this.editForm.classList.add("modal"),this.editForm.innerHTML="<div class = 'form-header-wrapper'> <h3 class = 'form-header'> Изменить тикет </h3></div>",this.editForm.innerHTML+=`<div class = 'input-wrapper'> <h4 class = 'input-header'> Краткое описание </h4> <input class = 'form-input' id = 'short-desc' value = ${e.querySelector(".ticket-short-desc").innerText}></div>`,this.editForm.innerHTML+=`<div class = 'input-wrapper'> <h4 class = 'input-header'> Полное описание </h4> <textarea id = 'full-desc' > ${e.querySelector(".ticket-full-desc").innerText} </textarea></div>`,this.editForm.innerHTML+="<div class = 'btn-group'> <button class = 'btn cancel-button'> Отмена </button> <button class = 'btn ok-button'> OK </button></div>",document.querySelector(".field").appendChild(this.editForm),this.editForm.querySelector(".ok-button").addEventListener("click",(t=>{t.preventDefault();const r=document.getElementById("short-desc").value;e.querySelector(".ticket-short-desc").innerText=r;const s=document.getElementById("full-desc").value;e.querySelector(".ticket-full-desc").innerText=s;let d="false";e.querySelector(".ticket-status").classList.contains("ready")&&(d="true");const{created:i}=e.dataset,n=new FormData;n.append("name",r),n.append("description",s),n.append("status",d),n.append("created",i),n.append("id",e.id);const o=new XMLHttpRequest;o.open("POST",`${this.url}?editTicket`,!0),o.send(n),this.editForm.remove()})),this.editForm.querySelector(".cancel-button").addEventListener("click",(e=>{e.preventDefault(),this.editForm.remove()}))}createTicket(e,t,r,s){const d=document.createElement("li");d.classList.add("ticket");const i=`${new Date(s).toLocaleDateString()}, ${new Date(s).toLocaleTimeString()}`;return d.innerHTML=`<div class = 'ticket-header'> <div class = 'ticket-status ${r}'></div> <div class = 'ticket-short-desc'> ${e}</div><div class = 'ticket-time'> ${i} </div> <div class = 'edit-ticket'> </div> <div class ='remove-ticket'> </div> </div> <div class = 'ticket-full-desc'> ${t} </div>`,d.querySelector(".ticket-status").addEventListener("click",(e=>{const t=new XMLHttpRequest;t.open("POST",`${this.url}?changeStatus`,!0),t.send(d.id),e.target.classList.contains("unready")?(e.target.classList.remove("unready"),e.target.classList.add("ready")):(e.target.classList.remove("ready"),e.target.classList.add("unready"))})),d.querySelector(".ticket-short-desc").addEventListener("click",(e=>{!1===e.target.closest(".ticket").querySelector(".ticket-full-desc").classList.contains("visible")?e.target.closest(".ticket").querySelector(".ticket-full-desc").classList.add("visible"):e.target.closest(".ticket").querySelector(".ticket-full-desc").classList.remove("visible")})),d.querySelector(".remove-ticket").addEventListener("click",(()=>{this.showRemoveForm(d)})),d.querySelector(".edit-ticket").addEventListener("click",(()=>{this.showEditForm(d)})),d}openForms(){document.querySelector(".add-button").addEventListener("click",(e=>{e.preventDefault(),this.showAddForm()}))}addNewTicket(){const e=document.getElementById("short-desc").value,r=document.getElementById("full-desc").value;if(!e||!r)return!1;const s=t()(),d=new FormData,i=Date.now();d.append("name",e),d.append("description",r),d.append("status","false"),d.append("created",i),d.append("id",s);const n=new XMLHttpRequest;n.open("POST",`${this.url}?newTicket`,!0),n.send(d);const o=this.createTicket(e,r,"unready",i);return o.id=s,o.dataset.created=i,document.querySelector(".ticket-list").appendChild(o),!1}redrawAllTickets(){const e=new XMLHttpRequest;e.open("GET",`${this.url}?allTickets`,!0),e.addEventListener("readystatechange",(()=>{if(4===e.readyState){const t=JSON.parse(e.response);for(const e of t){let t;"true"===e.status&&(t="ready"),"false"===e.status&&(t="unready");const r=this.createTicket(e.name,e.description,t,new Date(Number(e.created)));r.id=e.id,r.dataset.created=e.created,document.querySelector("ul").appendChild(r)}}})),e.send()}}).init()})()})();